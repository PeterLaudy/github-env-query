# This is a simple workflow to get information about the windows runner build environment for GitHub Actions

name: Get Windows Environment

# Controls when the action will run. 
on:
  # Run this workflow after a push
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      Product:
        description: "Product Name"
        required: true
        default: "QRCodeGenerator"
      Major_Version:
        description: "Major Version"
        required: true
        default: "5"
      Script_Name:
        description: "Script to run"
        required: true
        default: "manual-release-build"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    env:
      Product: QRCodeGenerator
      Major_Version: 5
      Script_Name: push-release-build

    # defaults:
      # run:
        # shell: pwsh
        # working-directory: .\powershell

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get info about Powershell
        run: Get-Host

      - name: Get all environment variables
        run: dir "env:"

      - name: Get installed platform tools
        run: dir "C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin"

      - name: Get installed dotnet sdk's
        run: dir "C:\Program Files\dotnet\sdk"

      - name: Get installed dotnet runtimes
        run: dir "C:\Program Files\dotnet\shared" | ForEach { dir "$_" }

      - name: Run nested PowerShell scripts from repository
        run:  .powershell\main-script.ps1
        shell: pwsh

      - name: Show some installed tool versions
        run: |
          & dotnet.exe --version
          & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\Extensions\TestPlatform\vstest.console.exe" /help | select -First 1
          & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe" -version | select -Last 1
          Get-Command curl
          Get-Command git
        shell: pwsh
